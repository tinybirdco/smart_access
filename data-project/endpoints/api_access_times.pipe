TOKEN "dashboard_token" READ

TOKEN "hogan_ltd_token" READ

NODE access_ok
SQL >

    %
    SELECT *
    FROM pubsub_events_mv
    WHERE
        access_granted = 1
        AND customer_id = {{ String(customerId, 'Customer75279', required=True) }}
        AND timestamp >= parseDateTimeBestEffort({{String(date_from, '2023-07-01T00:00:00.000Z', required=True)}})
        AND timestamp <= parseDateTimeBestEffort({{String(date_to, '2023-07-31T23:59:59.999Z', required=True)}})



NODE timely_grouped_access
SQL >

    %
    SELECT 
    {%if (x_axis == 'monthly') or ( defined(x_axis) and x_axis == 'none' and date_diff_in_days(date_to, date_from, date_format="%Y-%m-%dT%H:%M:%S.%fz") > 90 ) %}
      toMonth(timestamp) AS t,
    {%elif (x_axis == 'daily') or ( defined(x_axis) and x_axis == 'none' and date_diff_in_days(date_to, date_from, date_format="%Y-%m-%dT%H:%M:%S.%fz") > 7 ) %}
      toDate(timestamp) AS t,
    {%elif (defined(x_axis) and x_axis == 'hourly') or ( defined(x_axis) and x_axis == 'none' and date_diff_in_days(date_to, date_from, date_format="%Y-%m-%dT%H:%M:%S.%fz") > 1 ) %}
      toHour(timestamp) AS t, 
    {%else%}
      timestamp AS t,
    {%end%}
    count() AS total
    FROM access_ok
    GROUP BY t
    ORDER BY t ASC

NODE filling_hours_gaps
SQL >

    %
    WITH
      toDate(parseDateTimeBestEffort({{String(date_from, '2023-07-01T00:00:00.000Z', required=True)}})) AS d_from,
      toDate(parseDateTimeBestEffort({{String(date_to, '2023-07-31T23:59:59.999Z', required=True)}})) AS d_to,
      toHour(parseDateTimeBestEffort({{String(date_from, '2023-07-01T00:00:00.000Z', required=True)}})) AS hour_from,
      toHour(parseDateTimeBestEffort({{String(date_to, '2023-07-31T23:59:59.999Z', required=True)}})) AS hour_to
    SELECT
      arrayJoin(
        multiIf(date_diff('day', d_from, d_to) <= 1, range(0, 24, 1),
              hour_from-hour_to==0, [hour_from],
              range(hour_from, hour_to+1, 1))
      ) as t



NODE filling_days_gaps
SQL >

    %
    SELECT toDate(parseDateTimeBestEffort({{String(date_to, '2023-07-31T23:59:59.999Z', required=True)}})) AS t
    ORDER BY t ASC
    WITH FILL
    FROM toDate(parseDateTimeBestEffort({{String(date_from, '2023-07-01T00:00:00.000Z', required=True)}}))
       TO toDate(parseDateTimeBestEffort({{String(date_to, '2023-07-31T23:59:59.999Z', required=True)}})) 
       STEP interval 1 day



NODE filling_months_gaps
SQL >

    %
    WITH
      toMonth(parseDateTimeBestEffort({{String(date_from, '2023-07-01T00:00:00.000Z', required=True)}})) AS month_from,
      toMonth(parseDateTimeBestEffort({{String(date_to, '2023-07-31T23:59:59.999Z', required=True)}})) AS month_to
    SELECT
      if(month_from==month_to, arrayJoin([month_from]), arrayJoin(range(month_from, month_to+1, 1))) as t



NODE endpoint
SQL >

    %
    SELECT * 
    FROM timely_grouped_access
    {%if (x_axis == 'monthly') or ( defined(x_axis) and x_axis == 'none' and date_diff_in_days(date_to, date_from, date_format="%Y-%m-%dT%H:%M:%S.%fz") > 90 ) %}
    RIGHT JOIN filling_months_gaps USING t
    {%elif (x_axis == 'daily') or ( defined(x_axis) and x_axis == 'none' and date_diff_in_days(date_to, date_from, date_format="%Y-%m-%dT%H:%M:%S.%fz") > 7 ) %}
    RIGHT JOIN filling_days_gaps USING t
    {%elif (defined(x_axis) and x_axis == 'hourly') or ( defined(x_axis) and x_axis == 'none' and date_diff_in_days(date_to, date_from, date_format="%Y-%m-%dT%H:%M:%S.%fz") > 1 ) %}
    RIGHT JOIN filling_days_gaps USING t
    {%end%}
    ORDER BY t ASC